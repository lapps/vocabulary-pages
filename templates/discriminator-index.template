/*
 * This template is used to generate the discriminators.html file for the
 * LAPPS vocabulary web site.
 *
 * MAGIC VARIABLES
 *
 * Two variables, `version` and `discriminators` are injected into the script
 * at runtime.  
 * - version:  the value of the -V command line parameter.
 * - discriminators: a list of the discriminators parsed from the 
 *   lapps.discriminators DSL file.  Each object in the list is actually
 *   an instance of org.lappsgrid.discriminator.dsl.DiscriminatorDelegate and
 *   contains fields for 'name', 'uri', and 'description'.
 */

makeLinks = { String text ->
	if (text == null) return text
	return text.replaceAll("<link>(.*?)</link>", "<a href='\$1'>\$1</a>")
}

html {
    head {
        title "LAPPS Discriminators URI"
        link rel:'stylesheet', type:'text/css', href:'css/discriminators.css'
    }
    body {
        div(id:'container') {
            div(id:'intro') {
                div(id:'pageHeader') {
                    h1 "LAPPS Web Service URI Inventory"
                    h2 '(aka Discriminators)'
                    h2 "v${version}"
                }
            }
            div(id:'mainContent') {
                p """The LAPPS Web Service URI Inventory is a list of the URI
                    recognized by the core LAPPS infrastructure. Web services deployed to a
                    LAPPS node may use other URI, but this is the list of the URI used by
                    the LAPPS infrastructure.
                """
                p """The URI fall into one of three conceptual categories"""
                ol {
                    li """URI from the LAPPS Web Service Exchange Vocabulary.
                        These are the URI used as annotations types by LAPPS
                        web services.  For example, http://vocab.lappsgrid.org/Token.
                    """
                    li """URI used in the LIF (LAPPS Interchange Format). This is
                        the JSON-LD format exchanges by LAPPS web services.
                    """
                    li """URI used as commands and return codes used by LAPPS web services.
                    """
                }
                a(name:'top', '')
                table {
                    tr {
                        //th style:'width:4em', 'ID'
                        th 'Short name'
                        th 'URI / Media-Type'
                    }
                    int count = 0
                    discriminators.each { type ->
                        tr {
                            //td type.id
                            td {
                                a(name:"top.${type.name}")
                                a(href:"#${type.name}", type.name)
                            }
                            td {
                                if (type.uri.startsWith('http://vocab.lappsgrid.org')) {
                                    a href:type.uri.substring(27), type.uri
                                }
                                else {
                                    span type.uri
                                }
                            }
                        }
                    }
                }
                h1 'Descriptions'
                p 'These descriptions need work...'
                discriminators.each { type ->
                    a(name:type.name, '')
                    h2 type.name
                    table(class:'definition-table') {
                        //tr {
                        //    th width:'10%', "ID"
                        //    td type.id
                        //}
                        tr {
                            //td width:'10%', "URI"
                            if (type.uri.startsWith('http://vocab.lappsgrid.org')) {
                                td {
                                    a href:type.uri.substring(27), type.uri
                                }
                            }
                            else {
                                td type.uri
                            }
                        }
                        //if (type.ancestors.size() > 0) {
                        //    //td 'Ancestors'
                        //    td {
                        //        def makeLink = { name ->
                        //            builder.a(href:"#${name}", name)
                        //        }
                        //        type.ancestors.collect { makeLink(it) }.join(", ")
                        //    }
                        //}
                        tr {
                            //td()
			    mkp.yieldUnescaped "\n            <td>"
			    mkp.yieldUnescaped makeLinks(type.description)
			    mkp.yieldUnescaped "</td>"
                        }
                    }
                    /*
                    p(class:'backtotop') {
                        span 'Back to ('
                        a href:"#top.${type.name}", 'element'
                        span ' | '
                        a href:'#top', 'top'
                        span ')'
                    }
                    */
                    mkp.yieldUnescaped """
                        <p class='backtotop'>Back to (<a href="#top.${type.name}">element</a> | <a href="#top">top</a>)</p>
                    """
            	}
				div {
					br()
					br()
					a(rel:'license', href:'http://creativecommons.org/licenses/by/4.0/') {
						img(alt:"Creative Commons License", style:"border-width:0; vertical-align: middle;", src:"https://i.creativecommons.org/l/by/4.0/88x31.png", '')
					}
					span {
						span "The LAPPS Grid Vocabulary is licensed under the "
						a(rel:"license", href:"http://creativecommons.org/licenses/by/4.0/", 'Creative Commons Attribution 4.0 International License')
						span('.')
					}
					br()
					br()            
				}                                    
            }
        }
        div(class:'footer') {
            def year = Calendar.getInstance().get(Calendar.YEAR)
            mkp.yieldUnescaped "<p>Copyright &copy ${year} The Language Application Grid. All rights reserved.</p>"
        }
    }
}
    /*
    body(id:'container') {
        div(id:'main') {
            h1 "LAPPS Discriminators"
            discriminators.each { type ->
                h2 type.name
                table {
                    tr {
                        th "ID"
                        td type.id
                    }
                    tr {
                        th "URI"
                        td type.uri
                    }
                    tr {
                        td(colspan:2, type.description)
                    }
                }
                if (type.parents.size() > 0) {
                    h3 "Ancestors"
                    ul {
                        type.parents.each { parent ->
                            li parent.toString()
                       }
                    }
                }
            }
        }
    }
}
*/